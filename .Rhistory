# a1-news
## Overview
# a1-news
## Overview
In this exercise, you're going to create a simple markdown page that
summarizes a current event. In doing so, you'll demonstrate the
following skills:
* Managing a project using git and GitHub
* Using your command line to navigate your file system and create folders
* Leveraging markdown syntax to create a well formatted document
The instructions below detail how to complete this assignment, and in
the end it should look something like this (though with your chosen
event):
This introductory assignment includes two main tasks:
**First**, you have to edit this `README.md` file to create a
Markdown document that describes a news story (full instructions on
Canvas).
**Second**, you'll keep track of the terminal commands you run in the
`session.sh` file (you don't ever need to run that file).  This is not
something that is commonly done, but that will allow us to ensure that
you're properly using the command line.
**Finally**, when you're done, please **delete these instructions**
and leave only the markdown news story that you've written.  Make sure
to **commit** and **push** your edits to github and **submit your
repo's GitHub URL** to Canvas on time for full credit.
The final text should look something like this:
![example news story](example.png)
## Detailed Instructions
In order to complete this assignment you'll be editing two files:
* _README.md_: The  file that renders your news page
* _session.sh_: A file in which you'll keep track of your terminal
commands (not something that you typically do, but that will allow
us to ensure that you're properly using the command line).
Pick a text editor, both Atom and RStudio are good choices.
### Set Up
At this point, you should have a GitHub account set up, and should
feel (somewhat) comfortable using basic git commands in your
terminal. Follow the link on canvas to create your own private
repository for this assignment. This should automatically create a
private repository with your name in the course organization. This is
the URL that you will submit to Canvas as your assignment. You will
work directly in this repository that lives in the course GitHub
organization, so you do not need to fork it any more--clicking the
link essentially forks it.  You have just to clone it to your
machine before you start working.
Inside of your assignment repository on GitHub, you should see a
_session.sh_ file. This file contains the instructions for managing your
project, such as creating folders from the terminal and tracking your
files with Git.  These are broadly the steps that you should do on
your terminal, but you do not need to ever run this file.
### README.md
Your README.md file is the file in which you will perform the majority
of the assignment. You'll write the syntax necessary to create the
overview of your current event. More specifically, you'll do the
following:
* Create a top level heading that serves as a headline of your current event
* Write a short introductory paragraph the news event. You should
emphasize certain words by using both bold and italics.
* Include a quote from the news article, formatting it as a blockquote.
* Display an image related to your article.  You should create a
_imgs/_ folder in the current project directory using command line,
and thereafter download an image file
from the web into it.  Don't forget to add it to git!
**Note**: the example image here is _not_ in the _imgs/_
directory!
* Create an unordered list of additional information about your event,
each of which should reference (i.e. contain an url link) a
different news source.  There should be at least 3 different sources
listed.
* Commit your work (including edits/added files) every once and a
while.  Your final submission should include at least 5 committed
changes.
### Submission
Once you've finished editing your README.md file, use git to add and
commit the changes you've made, and push those changes to your
repository on GitHub (these instructions are in your session.sh
file).  Check out your repo's GitHub page and ensure the story looks
right.  In particular, the image should be visible.
Finally, **please submit the URL of your GitHub Repository** as you
assignment submission on Canvas in time!
## Grading
### README.md File (**32 points**)
- **Top level header**: 4 points (-1 for other header type)
- **Summary paragraph**: 5 points (-1 if < 2 sentences, -1 if no bold, -1 if no italics)
- **Block quote**: 5 points (-2 for improper formatting)
- **Image**: 10 points
- -2 if image not stored in a separate directory
- -1 if folder is not called `imgs`
- -2 if _relative path_ isn't used or http path was used
- -2 if image doesn't render on github
- **Unordered list of different sources**: 8 points
- -2 if not unordered list
- 2 points for each item in list: -1 if url source link
missing/not working.
### session.sh File (**13 points**)
- Print your working directory (**1 point**)
- Change your directory to a folder in which you do work for this class (Make sure to use the "~" shortcut) (**2 point**)
- -1 if the `~` isn't used
- Clone your private assignment repository from GitHub to your machine (**1 points**)
- Change your directory to inside of your a1-news-USERNAME repository (**1 points**)
- Make a new folder called "imgs" (**2 points**)
- Add all of your changes that you've made to git (**2 points**)
- Make a commit, including a descriptive message(**2 points**)
- Push your change up to GitHub(**2 points**)
### github repo (**5 points**)
- -2 if HEAD (i.e. the current version of _master_-branch) contains
unnecessary/unrelated files (such as _.DS\_Store_).
- -1 if committed less than 5 times, -2 if committed only once.
---
Have fun!
1 + 2*3
x <- 6
x
ILikeCoffee <- TRUE
source('~/.active-rstudio-document')
cat(sid,"second per day \n")
cat(sid, "second per day \n")
cat(sid, "seconds and ", mid, "minutes per day\n")
install.packages("lubridate")
sid <- 60*60*24
mid <- 60*24
cat(sid, "seconds and ", mid, "minutes per day\n")
library(lubridate)
ymd(20190410)
mdy("4/10/2019")
a <- 7
if(a %% 2 == 1) {
cat("odd\n")
} else {
cat("even\n")
}
a <- 12
a <- 12
cat(a, "is")
if(a %% 2 == 1) {
cat("odd\n")
} else {
cat("even\n")
}
evenOdd <- function(x){
if(x %% 2 == 1)
cat("add\n")
} else {
cat("even\n")
}
x <- 7
source('~/Desktop/4:10lecture.R')
source('~/Desktop/4:10lecture.R')
evenOdd(3)
evenodd(2)
evenOdd(2)
people <- c("Sarah", "Amit", "Zhang")
print(people)
people <- c("Sarah", "Amit", "Zhang")
print(people)
numbers <- c(1, 2, 3, 4, 5)
print(number)
print(numbers)
length(people)
one_to_ten <- seq(1, 10)
print(one_to_ten)
one_to_ten <- seq(1, 10)
print(one_to_ten)
odds <- seq(1, 10, 2)
print(odds)
people[2]
install.packages(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
install.packages(shiny)
install.packages("shiny")
ui <- fluidPage(
titlePanel("Title")
)
library(shiny)
ui <- fluidPage(
titlePanel("Title")
)
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
runApp('Desktop/info-201/lecture_exercise/shiny.R')
output$outoutText <- renderText({
paste("The number you chose is", input$number)
})
source('~/Desktop/info-201/lecture_exercise/shiny2.R')
runApp('Desktop/info-201/lecture_exercise/shiny2.R')
runApp('Desktop/info-201/lecture_exercise/exercise-shiny-reactive')
View(data)
runApp('Desktop/info-201/lecture_exercise/exercise-shiny-reactive')
runApp('Desktop/info-201/lecture_exercise/exercise-shiny-reactive')
install.packages("shinythemes")
runApp('Desktop/info-201/lecture_exercise/exercise-shiny-reactive')
View(data)
data
runApp('Desktop/info-201/lecture_exercise/exercise-shiny-reactive')
runApp('Desktop/info-201/lecture_exercise/exercise-shiny-reactive')
install.packages("leaflet")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Desktop/info-201/lecture_exercise/leaflet.R')
m
source('~/Desktop/info-201/lecture_exercise/leaflet.R')
source('~/Desktop/info-201/lecture_exercise/leaflet.R')
m
source('~/Desktop/info-201/lecture_exercise/leaflet.R')
m
df <- data.frame(Lat = 1:10, Long = rnorm(10))
leaflet(df) %>% addCircles
source('~/Desktop/info-201/lecture_exercise/leaflet.R')
m
x <- data.frame(
cell   = c("A", "A", "B", "B", "C", "C"),
sample = c("A1", "A2", "B1", "B2", "C1", "C2"),
weight = c(0.32, 0.33, 0.21, 0.22, 0.37, 0.36)
View(x)
x <- data.frame(
cell   = c("A", "A", "B", "B", "C", "C"),
sample = c("A1", "A2", "B1", "B2", "C1", "C2"),
weight = c(0.32, 0.33, 0.21, 0.22, 0.37, 0.36))
View(x)
setwd("~/Desktop/info-201/info_assignment/us-women-bachelors/Hiina")
setwd("..")
data <- read.csv("data/percent-bachelors-degrees-women-usa.csv",stringsAsFactors = F)
df1 <- data %>%
#filter(Year == input$Year1) %>%
filter(Year == 1970) %>%
select(Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences)
library(shiny)
library(ggplot2)
library(dplyr)
df1 <- data %>%
#filter(Year == input$Year1) %>%
filter(Year == 1970) %>%
select(Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences)
View(df1)
df_koba <- data %>%
filter(Year == input$Year1) %>%
filter(Year == input$Year2) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences)
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970) %>%
filter(Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences)
View(df_koba)
setwd("~/Desktop/info-201/info_assignment/us-women-bachelors")
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970) %>%
filter(Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences)
View(df_koba)
View(data)
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970 | Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences)
View(df)
View(df_koba)
?gather
library(tidyr)
?gather
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970 | Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences) %>%
gather("major", "value", -Year)
View(df_koba)
graph <-ggplot(df_koba, aes(x = Year, y = value, fill = major)) +
#geom_bar(stat = "identity", position = "fill") +
geom_bar(stat = "identity") +
ylab("number of people") +
theme_bw()
graph
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970 | Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences) %>%
gather("major", "value", -Year) %>%
mutate(Year = as.character(Year))
graph <-ggplot(df_koba, aes(x = Year, y = value, fill = major)) +
#geom_bar(stat = "identity", position = "fill") +
geom_bar(stat = "identity") +
ylab("number of people") +
theme_bw()
graph
output$graph <- renderPlot({
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970 | Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences) %>%
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970 | Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences) %>%
View(df_koba)
View(df_koba)
View(df_koba)
:
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970 | Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences) %>%
View(df_koba)
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970 | Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences)
View(df_koba)
df_koba <- data %>%
#filter(Year == input$Year1) %>%
#filter(Year == input$Year2) %>%
filter(Year == 1970 | Year == 2011) %>%
select(Year, Biology, Computer.Science, Engineering, Math.and.Statistics, Physical.Sciences) %>%
gather("major", "value", -Year)
View(df_koba)
?spread
df_wide <- df_koba %>%
spread(major, value)
View(df_wide)
